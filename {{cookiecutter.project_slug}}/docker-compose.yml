version: "3.9"

volumes:
  db-data:

networks:
  flowdapt:

# Use if you mount a config file to the container
# configs:
#   flowdapt-config:
#     file: ~/.flowdapt/configs/flowdapt.yaml

services:
  # --------------------------- DATABASE ---------------------------
  database:
    image: postgres:9.4
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - flowdapt

  # --------------------------- TELEMETRY ---------------------------

  # # Traces
  # tempo:
  #   image: grafana/tempo:latest
  #   command:
  #     - "-config.file=/etc/tempo.yaml"
  #   networks:
  #     - flowdapt
  #   configs:
  #     - source: tempo-config
  #       target: /etc/tempo.yaml
  #   volumes:
  #     - tempo-data:/tmp/tempo

  # # Metrics
  # prometheus:
  #   image: prom/prometheus:latest
  #   restart: always
  #   configs:
  #     - source: prometheus-config
  #       target: /etc/prometheus/prometheus.yml
  #   networks:
  #     - flowdapt

  # # Telemetry Collector
  # otel-collector:
  #   image: otel/opentelemetry-collector:0.67.0
  #   command: 
  #     "--config=/etc/otel-collector-config.yaml"
  #   configs:
  #     - source: otel-config
  #       target: /etc/otel-collector-config.yaml
  #   networks:
  #     - flowdapt
  #   depends_on:
  #     - tempo
  #     - prometheus

  # # Dashboard
  # grafana:
  #   image: grafana/grafana:latest
  #   environment:
  #     GF_SECURITY_ADMIN_USER: admin
  #     GF_SECURITY_ADMIN_PASSWORD: grafana
  #   configs:
  #     - source: grafana-datasource
  #       target: /etc/grafana/provisioning/datasources/datasource.yaml
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - flowdapt
  #   depends_on:
  #     - prometheus
  #     - tempo


  # --------------------------- FLOWDAPT ---------------------------

  # Flowdapt
  flowdapt:
    # To use the local tag, build locally via `task build-docker-base` first
    image: {{ cookiecutter.image_registry }}/{{ cookiecutter.repository }}:local
    build:
      context: ..
      dockerfile: Dockerfile
    pull_policy: never  # This is needed to ensure we aren't trying to pull instead of reusing the local image, remove if using a remote image
    restart: on-failure:3
    # Mount the config file to the container's config directory
    # configs:
    #   - source: flowdapt-config
    #     target: /data/configs/flowdapt.yaml
    # Set the size of the tmpfs to 1GB and mount it to the container's /dev/shm directory
    # for Ray to use as shared memory, otherwise it will default to the /tmp directory
    # and harm performance.
    # tmpfs:
    #   - /tmp:size=3G
    volumes:
      # Mount the data volume to the container's data directory
      - flowdapt-data:/data
      # OR
      # Mount the local data directory to the container
      # - ~/.flowdapt:/data
      # Mount the tmpfs to the container's /dev/shm directory
      # (THIS IS FOR RAY ONLY)
      # - type: tmpfs
      #   target: /dev/shm
    environment:
      # DON'T FORGET TO SOURCE INTO YOUR secrets.env WITH THE CI_DEP_TOKEN
      PIP_EXTRA_INDEX_URL: https://dependencies:${CI_DEP_TOKEN}@git.freqai.cloud/api/v4/groups/70/-/packages/pypi/simple
      # Normally the container will not read any config files and will
      # just use the default values. However if we have a config to use and we have mounted
      # the local data dir, or we have injected a docker config we can set the name here like so:
      # FLOWDAPT__CONFIG_FILE: flowdapt.yaml
      # Set to console for debugging purposes
      FLOWDAPT__LOGGING__FORMAT: console
      # Set the telemetry to enabled
      # FLOWDAPT__TELEMETRY__ENABLED: false
      # FLOWDAPT__TELEMETRY__ENDPOINT: http://otel-collector:4317
      # When running in docker we need to set the host to
      # allow external connections from outside docker or
      # from other containers. Port defaults to 8080.
      FLOWDAPT__RPC__API__HOST: 0.0.0.0
      FLOWDAPT__RPC__API__PORT: 8080
      # Set the database information to connect to the postgres service
      FLOWDAPT__DATABASE__TARGET: flowdapt.lib.database.impl.postgres.PostgresDatabase
      FLOWDAPT__DATABASE__HOST: database
      FLOWDAPT__DATABASE__PORT: 5432
      FLOWDAPT__DATABASE__USERNAME: postgres
      FLOWDAPT__DATABASE__PASSWORD: postgres
      # If using Ray, set the dashboard host so it's accessible from outside the container.
      # If you are not using Ray then comment the following line out.
      # FLOWDAPT__SERVICES__COMPUTE__EXECUTOR__DASHBOARD_HOST: 0.0.0.0
      FLOWDAPT__SERVICES__COMPUTE__EXECUTOR__TARGET: flowdapt.compute.executor.local.LocalExecutor
    ports:
      # Expose the port you want to use for the API, defaults to 8080
      - "8080:8080"
      # Expose any dashboard ports if using an Executor that supports it
      # This port is for the Ray dashboard, if you aren't using Ray then
      # comment the following line out.
      # - "9969:9969"
    networks:
      - flowdapt
    depends_on:
      - database